crop_recommendation_model_path ='models/RandomForest.pkl'
crop_recommendation_model = pickle.load(
    open(crop_recommendation_model_path, 'rb'))
-----------------------------------------------------------------------
@ app.route('/fertilizer')
def fertilizer_recommendation():
    title = 'Fertilizer_recommender - Fertilizer Suggestion'

    return render_template('fertilizer.html', title=title)
------------------------------------------------------------------------
# render crop recommendation result page


@ app.route('/crop-predict', methods=['POST'])
def crop_prediction():
    title = 'Harvestify - Crop Recommendation'

    if request.method == 'POST':
        N = int(request.form['nitrogen'])
        P = int(request.form['phosphorous'])
        K = int(request.form['pottasium'])
        ph = float(request.form['ph'])
        rainfall = float(request.form['rainfall'])

        # state = request.form.get("stt")
        city = request.form.get("city")

        if weather_fetch(city) != None:
            temperature, humidity = weather_fetch(city)
            data = np.array([[N, P, K, temperature, humidity, ph, rainfall]])
            my_prediction = crop_recommendation_model.predict(data)
            final_prediction = my_prediction[0]

            return render_template('crop-result.html', prediction=final_prediction, title=title)

        else:

            return render_template('try_again.html', title=title)

@ app.route('/fertilizer')
def fertilizer_recommendation():
    title = 'fertilizer_recommender - Fertilizer Suggestion'

    return render_template('fertilizer.html', title=title)
